use clap::{
  Arg,
  ArgAction,
  Command,
};

pub fn init() -> Command {
  Command::new("docker")
    .subcommand_required(true)
    .arg(
      Arg::new("profile")
        .long("profile")
        .action(ArgAction::Set)
        .global(true)
    )
    .subcommand(
      Command::new("env")
        .arg(
          Arg::new("username")
            .long("username")
            .required(true)
            .action(ArgAction::Set)
        )
        .arg(
          Arg::new("hostname")
            .long("hostname")
            .required(true)
            .action(ArgAction::Set)
        )
        .arg(
          Arg::new("path")
            .long("path")
            .required(true)
            .action(ArgAction::Set)
        )
        .arg(
          Arg::new("profile")
            .long("profile")
            .required(true)
            .action(ArgAction::Set)
        )
    )
    .subcommand(
      Command::new("up")
        .arg(
          Arg::new("username")
            .long("username")
            .required(true)
            .conflicts_with("profile")
            .action(ArgAction::Set)
        )
        .arg(
          Arg::new("hostname")
            .long("hostname")
            .required(true)
            .conflicts_with("profile")
            .action(ArgAction::Set)
        )
        .arg(
          Arg::new("path")
            .long("path")
            .required(true)
            .conflicts_with("profile")
            .action(ArgAction::Set)
        )
    )
    .subcommand(
      Command::new("down")
        .arg(
          Arg::new("username")
            .long("username")
            .required(true)
            .conflicts_with("profile")
            .action(ArgAction::Set)
        )
        .arg(
          Arg::new("hostname")
            .long("hostname")
            .required(true)
            .conflicts_with("profile")
            .action(ArgAction::Set)
        )
        .arg(
          Arg::new("path")
            .long("path")
            .required(true)
            .conflicts_with("profile")
            .action(ArgAction::Set)
        )
        .arg(
          Arg::new("rmi")
            .long("rmi")
            .required(false)
            .value_parser(["local", "all"])
            .action(ArgAction::Set)
        )
    )
    .subcommand(
      Command::new("start")
        .arg(
          Arg::new("username")
            .long("username")
            .required(true)
            .conflicts_with("profile")
            .action(ArgAction::Set)
        )
        .arg(
          Arg::new("hostname")
            .long("hostname")
            .required(true)
            .conflicts_with("profile")
            .action(ArgAction::Set)
        )
        .arg(
          Arg::new("path")
            .long("path")
            .required(true)
            .conflicts_with("profile")
            .action(ArgAction::Set)
        )
    )
    .subcommand(
      Command::new("stop")
        .arg(
          Arg::new("username")
            .long("username")
            .required(true)
            .conflicts_with("profile")
            .action(ArgAction::Set)
        )
        .arg(
          Arg::new("hostname")
            .long("hostname")
            .required(true)
            .conflicts_with("profile")
            .action(ArgAction::Set)
        )
        .arg(
          Arg::new("path")
            .long("path")
            .required(true)
            .conflicts_with("profile")
            .action(ArgAction::Set)
        )
    )
}